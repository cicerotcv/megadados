{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Megadados/FastAPI Project Documentation This documentation provides detailed information about the Megadados project, its goals, and how to use it effectively. The source code can be found at github.com/cicerotcv/megadados . About FastAPI FastAPI is a modern, fast, and highly efficient web framework for building APIs with Python. It is designed to be easy to use, while also providing robust performance, automatic validation, and interactive documentation. Whether you're a beginner or an experienced developer, FastAPI empowers you to create web APIs with minimal effort. Project Goals The primary goals of this project includes: Subscribe/unsubscribe students to school subjects; Input/edit/delete notes/grades from students' subjects; Contributing We welcome contributions from the community!","title":"Home"},{"location":"#welcome-to-the-megadadosfastapi-project-documentation","text":"This documentation provides detailed information about the Megadados project, its goals, and how to use it effectively. The source code can be found at github.com/cicerotcv/megadados .","title":"Welcome to the Megadados/FastAPI Project Documentation"},{"location":"#about-fastapi","text":"FastAPI is a modern, fast, and highly efficient web framework for building APIs with Python. It is designed to be easy to use, while also providing robust performance, automatic validation, and interactive documentation. Whether you're a beginner or an experienced developer, FastAPI empowers you to create web APIs with minimal effort.","title":"About FastAPI"},{"location":"#project-goals","text":"The primary goals of this project includes: Subscribe/unsubscribe students to school subjects; Input/edit/delete notes/grades from students' subjects;","title":"Project Goals"},{"location":"#contributing","text":"We welcome contributions from the community!","title":"Contributing"},{"location":"running/","text":"Running Executing the project To execute this project, check if you're in the right environment and run: python -m uvicorn src.main:app Documentation After running the project, your terminal should tell you the port your project is available and its documentation is available in the endpoint /docs : http://localhost:3333/docs","title":"Running"},{"location":"running/#running","text":"","title":"Running"},{"location":"running/#executing-the-project","text":"To execute this project, check if you're in the right environment and run: python -m uvicorn src.main:app","title":"Executing the project"},{"location":"running/#documentation","text":"After running the project, your terminal should tell you the port your project is available and its documentation is available in the endpoint /docs : http://localhost:3333/docs","title":"Documentation"},{"location":"setup/environment-variables/","text":"Environment Variables This project uses python-dotenv to extract environment variables from a .env file. The only required variable is DB_URL , but for simplification, the .env.example file contains a suggestion of how to split it in its meaningful parts as shown below. DB_PROVIDER=mysql DB_DRIVER=mysqlconnector DB_USER= DB_PASSWORD= DB_HOST= DB_PORT= DB_DATABASE_NAME=exemplo_projeto_megadados DB_URL=${DB_PROVIDER}+${DB_DRIVER}://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE_NAME} If you intend to use sqlite , your .env file could be as simple as follow: DB_URL=sqlite:///megadados.db?check_same_thread=False","title":"Environment Variables"},{"location":"setup/environment-variables/#environment-variables","text":"This project uses python-dotenv to extract environment variables from a .env file. The only required variable is DB_URL , but for simplification, the .env.example file contains a suggestion of how to split it in its meaningful parts as shown below. DB_PROVIDER=mysql DB_DRIVER=mysqlconnector DB_USER= DB_PASSWORD= DB_HOST= DB_PORT= DB_DATABASE_NAME=exemplo_projeto_megadados DB_URL=${DB_PROVIDER}+${DB_DRIVER}://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE_NAME} If you intend to use sqlite , your .env file could be as simple as follow: DB_URL=sqlite:///megadados.db?check_same_thread=False","title":"Environment Variables"},{"location":"setup/installation/","text":"Installation Using a virtual environment is advised. 1. Creating a virtual environment 1.1 Using conda To create a virtual environment using Anaconda: conda create -n megadados python=3.8 Then activate: conda activate megadados 1.2 Using venv To create using venv : python -m venv virtual-env Then activate it: Unix/macOS: source virtual-env/bin/activate Windows: ./virtual-env/Scripts/activate 2. Installing the dependencies After activating your environment: pip install -r requirements.txt","title":"Installation"},{"location":"setup/installation/#installation","text":"Using a virtual environment is advised.","title":"Installation"},{"location":"setup/installation/#1-creating-a-virtual-environment","text":"","title":"1. Creating a virtual environment"},{"location":"setup/installation/#11-using-conda","text":"To create a virtual environment using Anaconda: conda create -n megadados python=3.8 Then activate: conda activate megadados","title":"1.1 Using conda"},{"location":"setup/installation/#12-using-venv","text":"To create using venv : python -m venv virtual-env Then activate it: Unix/macOS: source virtual-env/bin/activate Windows: ./virtual-env/Scripts/activate","title":"1.2 Using venv"},{"location":"setup/installation/#2-installing-the-dependencies","text":"After activating your environment: pip install -r requirements.txt","title":"2. Installing the dependencies"},{"location":"setup/requirements/","text":"Requirements First of all, you need python installed to run this project. It was built using Python 3.8. In the root of this project you can find a requirements.txt .","title":"Requirements"},{"location":"setup/requirements/#requirements","text":"First of all, you need python installed to run this project. It was built using Python 3.8. In the root of this project you can find a requirements.txt .","title":"Requirements"}]}